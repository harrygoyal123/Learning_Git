
module "redshift_cluster" {
  source = "path/to/aws_redshift_cluster"

  cluster_identifier                 = "my-redshift-cluster"
  database_name                      = "my_database"
  default_iam_role_arn               = "arn:aws:iam::1234567890:role/my-redshift-role"
  node_type                          = "dc2.large"
  cluster_type                       = "single-node"
  master_password                    = "MyPassword123"
  master_username                    = "admin"
  vpc_security_group_ids             = ["sg-12345678", "sg-98765432"]
  cluster_subnet_group_name          = "my-redshift-subnet-group"
  availability_zone                  = "us-east-1a"
  availability_zone_relocation_enabled = false
  preferred_maintenance_window       = "sun:10:00-sun:14:00"
  cluster_parameter_group_name       = "default.redshift-1.0"
  automated_snapshot_retention_period = 7
  port                               = 5439
  cluster_version                    = "1.0"
  allow_version_upgrade              = true
  apply_immediately                  = true
  aqua_configuration_status          = "enabled"
  number_of_nodes                    = 2
  publicly_accessible                = true
  encrypted                          = true
  enhanced_vpc_routing               = true
  kms_key_id                         = "arn:aws:kms:us-east-1:1234567890:key/abcd-1234"
  elastic_ip                         = "192.0.2.123"
  skip_final_snapshot                 = false
  final_snapshot_identifier          = "my-final-snapshot"
  snapshot_identifier                = "my-snapshot"
  snapshot_cluster_identifier        = "restored-cluster"
  owner_account                      = "1234567890"
  iam_roles                          = ["arn:aws:iam::1234567890:role/my-redshift-role"]
  maintenance_track_name             = "current"
  manual_snapshot_retention_period   = 30
  snapshot_copy                      = true
  logging                            = {
    enable     = true
    bucket     = "my-logging-bucket"
    prefix     = "redshift-logs/"
    permissions = [
      "READ",
      "WRITE",
      "FULL_CONTROL"
    ]
  }
}




variable "cluster_identifier" {
  description = "The identifier for the Redshift cluster."
  type        = string
}

variable "database_name" {
  description = "The name of the default database in the Redshift cluster."
  type        = string
}

variable "default_iam_role_arn" {
  description = "The default IAM role ARN to be associated with the Redshift cluster."
  type        = string
}

variable "node_type" {
  description = "The type of nodes to be provisioned for the Redshift cluster."
  type        = string
}

variable "cluster_type" {
  description = "The type of the Redshift cluster."
  type        = string
}

variable "master_password" {
  description = "The password for the master user of the Redshift cluster."
  type        = string
}

variable "master_username" {
  description = "The username for the master user of the Redshift cluster."
  type        = string
}

variable "vpc_security_group_ids" {
  description = "A list of VPC security group IDs to associate with the Redshift cluster."
  type        = list(string)
}

variable "cluster_subnet_group_name" {
  description = "The name of the cluster subnet group for the Redshift cluster."
  type        = string
}

variable "availability_zone" {
  description = "The availability zone for the Redshift cluster."
  type        = string
}

variable "availability_zone_relocation_enabled" {
  description = "Whether availability zone relocation is enabled for the Redshift cluster."
  type        = bool
}

variable "preferred_maintenance_window" {
  description = "The preferred maintenance window for the Redshift cluster."
  type        = string
}

variable "cluster_parameter_group_name" {
  description = "The name of the cluster parameter group for the Redshift cluster."
  type        = string
}

variable "automated_snapshot_retention_period" {
  description = "The number of days to retain automated snapshots of the Redshift cluster."
  type        = number
}

variable "port" {
  description = "The port number on which the Redshift cluster accepts incoming connections."
  type        = number
}

variable "cluster_version" {
  description = "The version of the Redshift engine software for the cluster."
  type        = string
}

variable "allow_version_upgrade" {
  description = "Whether version upgrades are allowed for the Redshift cluster."
  type        = bool
}

variable "apply_immediately" {
  description = "Whether changes should be applied immediately or during the next maintenance window."
  type        = bool
}

variable "aqua_configuration_status" {
  description = "The status of Aqua (Advanced Query Accelerator) configuration for the cluster."
  type        = string
}

variable "number_of_nodes" {
  description = "The number of compute nodes in the Redshift cluster."
  type        = number
}

variable "publicly_accessible" {
  description = "Whether the Redshift cluster is publicly accessible or not."
  type        = bool
}

variable "encrypted" {
  description = "Whether the Redshift cluster is encrypted or not."
  type        = bool
}

variable "enhanced_vpc_routing" {
  description = "Whether enhanced VPC routing is enabled for the Redshift cluster."
  type        = bool
}

variable "kms_key_id" {
  description = "The ID of the KMS key used to encrypt the Redshift cluster."
  type        = string
}

variable "elastic_ip" {

  description = "The Elastic IP address associated with the Redshift cluster."
  type        = string
}

variable "skip_final_snapshot" {
  description = "Whether to skip the final snapshot when deleting the Redshift cluster."
  type        = bool
}

variable "final_snapshot_identifier" {
  description = "The identifier for the final snapshot of the Redshift cluster."
  type        = string
}

variable "snapshot_identifier" {
  description = "The identifier for the snapshot to restore the Redshift cluster from."
  type        = string
}

variable "snapshot_cluster_identifier" {
  description = "The identifier for the restored Redshift cluster from a snapshot."
  type        = string
}

variable "owner_account" {
  description = "The AWS account ID of the owner of the Redshift cluster."
  type        = string
}

variable "iam_roles" {
  description = "A list of IAM roles to be associated with the Redshift cluster."
  type        = list(string)
}

variable "maintenance_track_name" {
  description = "The name of the maintenance track for the Redshift cluster."
  type        = string
}

variable "manual_snapshot_retention_period" {
  description = "The number of days to retain manual snapshots of the Redshift cluster."
  type        = number
}

variable "snapshot_copy" {
  description = "Whether snapshot copying is enabled for the Redshift cluster."
  type        = bool
}

variable "logging" {
  description = "The logging configuration for the Redshift cluster."
  type        = map(string)
}

