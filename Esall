resource "aws_redshift_event_subscription" "redshift_event_subscription" {
  name            = var.name
  sns_topic_arn   = var.sns_topic_arn
  source_ids      = var.source_ids
  source_type     = var.source_type
  events          = var.events
  severity        = var.severity
  event_categories = var.event_categories
  enabled         = var.enabled
  tags            = var.tags
}



variable "name" {
  description = "The name of the Redshift event subscription."
  type        = string
}

variable "sns_topic_arn" {
  description = "The ARN of the SNS topic to send events to."
  type        = string
}

variable "source_ids" {
  description = "A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified."
  type        = list(string)
}

variable "source_type" {
  description = "The type of source that will be generating the events to be subscribed to."
  type        = string
}

variable "events" {
  description = "The events to be subscribed to. Valid options are cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, or scheduled-action. If not set, all events will be subscribed to."
  type        = list(string)
}

variable "severity" {
  description = "The event severity to be published by the notification subscription. Valid options are INFO or ERROR. The default value is INFO."
  type        = string
}

variable "event_categories" {
  description = "A list of event categories for a SourceType that you want to subscribe to."
  type        = list(string)
}

variable "enabled" {
  description = "A boolean flag to enable/disable the subscription. Defaults to true."
  type        = bool
}

variable "tags" {
  description = "A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level."
  type        = map(string)
}



output "arn" {
  description = "Amazon Resource Name (ARN) of the Redshift event notification subscription."
  value       = aws_redshift_event_subscription.redshift.arn
}

output "id" {
  description = "The name of the Redshift event notification subscription."
  value       = aws_redshift_event_subscription.redshift.id
}

module "redshift_event_subscription" {
  source  = "path/to/redshift_event_subscription"
  version = "1.0.0"

  name            = "example_event_subscription"
  sns_topic_arn   = "arn:aws:sns:us-west-2:123456789012:example-topic"
  source_ids      = ["example-source-id1", "example-source-id2"]
  source_type     = "cluster"
  events          = ["cluster", "cluster-parameter-group"]
  severity        = "INFO"
  event_categories = ["configuration", "backup"]
  enabled         = true

  tags = {
    Environment = "Production"
    Department  = "Engineering"
  }
}


output "customer_aws_id" {
  description = "The AWS customer account associated with the Redshift event notification subscription."
  value       = aws_redshift_event_subscription.redshift.customer_aws_id
}

output "tags_all" {
  description = "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block."
  value       = aws_redshift_event_subscription.redshift.tags_all
}








